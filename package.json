{
  "name": "code-template-tool",
  "displayName": "Code Template Tool",
  "description": "Generate code based on the template",
  "icon": "resource/img/icon.png",
  "version": "0.6.1",
  "publisher": "yuanhjty",
  "license": "MIT",
  "keywords": [
    "file",
    "folder",
    "template",
    "tool"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/yuanhjty/code-template-tool.git"
  },
  "engines": {
    "vscode": "^1.30.2"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:extension.newFromTemplate",
    "onCommand:extension.editTemplates",
    "onCommand:extension.reloadTemplates"
  ],
  "main": "./out/extension",
  "contributes": {
    "commands": [
      {
        "command": "extension.newFromTemplate",
        "title": "New File / Folder From Template",
        "category": "template"
      },
      {
        "command": "extension.editTemplates",
        "title": "Edit Templates",
        "category": "template"
      },
      {
        "command": "extension.reloadTemplates",
        "title": "Reload Templates",
        "category": "template"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "extension.newFromTemplate",
          "group": "navigation"
        },
        {
          "command": "extension.editTemplates",
          "group": "navigation"
        },
        {
          "command": "extension.reloadTemplates",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "command": "extension.newFromTemplate",
          "group": "navigation"
        },
        {
          "command": "extension.editTemplates",
          "group": "navigation"
        },
        {
          "command": "extension.reloadTemplates",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Code Template",
      "properties": {
        "codeTemplateTool.templatesPath": {
          "type": "string",
          "default": "~/.vscode/templates",
          "description": "Absolute path only. \nVariables supported: \n 1. `{home}`: User home directory. \n 2. `{workspace}`: Workspace directory(directory currently open in vscode) or user home directory if no open directory. \n Examples: `{home}/.vscode/templates`, `{workspace}/templates`. \nYou can also use `~/` to reference user home directory."
        },
        "codeTemplateTool.configFile": {
          "type": "string",
          "default": "template.config.json"
        },
        "codeTemplateTool.encoding": {
          "type": "string",
          "default": "utf8"
        },
        "codeTemplateTool.ignore": {
          "type": "array",
          "default": [
            ".DS_Store"
          ],
          "description": "An array of glob patterns. Files and folders that match one of the specified patterns will be ignored."
        },
        "codeTemplateTool.variable.noTransformation": {
          "type": "boolean",
          "default": false,
          "description": "Control variable transformation globally. If set to true, raw user input will be used to replace the placeholders in template content. Can be overwritten by the `style.noTransformation` filed in variable configuration."
        },
        "codeTemplateTool.variable.keepUpperCase": {
          "type": "boolean",
          "default": false,
          "description": "If set to `true`, uppercase words in user input variable value will not be transformed to other cases. Can be overwritten by the `style.keepUpperCase` field in variable configuration."
        },
        "codeTemplateTool.variable.leftBoundary": {
          "type": "string",
          "default": "___",
          "description": "The default value is for compatibility. If using variable in file names, the boundary token should not be reserved characters of your operating system. Examples: `{_`, `{{`, `{%`"
        },
        "codeTemplateTool.variable.rightBoundary": {
          "type": "string",
          "default": "___",
          "description": "The default value is for compatibility. If using variable in file names, the boundary token should not be reserved characters of your operating system. Examples: `_}`, `}}`, `%}`"
        },
        "codeTemplateTool.userInput.confirmOnEnter": {
          "type": "boolean",
          "default": false,
          "description": "If set to `true`, you can press `enter` key to `confirm`."
        },
        "codeTemplateTool.userInput.cancelOnEscape": {
          "type": "boolean",
          "default": false,
          "description": "If set to `true`, you can press `esc` key to `cancel`."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "lint:fix": "eslint --fix --ext .js,.ts ./",
    "test": "npm run lint:fix && npm run compile && node ./node_modules/vscode/bin/test",
    "prettier": "prettier --write \"**/*.{js,ts,json}\"",
    "format": "npm run prettier && npm run lint:fix"
  },
  "devDependencies": {
    "@types/chai": "^4.1.7",
    "@types/glob": "^7.1.1",
    "@types/mocha": "^2.2.42",
    "@types/node": "^8.9.0",
    "@types/node-fetch": "^2.1.4",
    "@typescript-eslint/eslint-plugin": "^2.2.0",
    "@typescript-eslint/parser": "^2.2.0",
    "chai": "^4.2.0",
    "eslint": "^6.4.0",
    "eslint-config-y-base": "^3.2.0",
    "eslint-config-y-ts-base": "^2.2.0",
    "eslint-plugin-import": "^2.18.2",
    "prettier": "^1.18.2",
    "prettier-config-y-base": "^1.0.1",
    "typescript": "^3.6.3",
    "vscode": "^1.1.36"
  },
  "dependencies": {
    "glob": "^7.1.4",
    "node-fetch": "^2.6.0"
  }
}
